package com.appsarr.app.ws.ui.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.appsarr.app.ws.ui.model.request.UserDetailsRequestModel;
import com.appsarr.app.ws.ui.model.response.UserRest;

@RestController
@RequestMapping("users") // http://localhost:8080/users
public class UserController {

	@GetMapping
	public String getUsers() {
		return "getusers was called";
	}

	@GetMapping(path = "/{id}", produces = { MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE })
	public ResponseEntity<UserRest> getUser(@PathVariable Integer id) {
		UserRest userRest = new UserRest();
		userRest.setFirstName("Antonio");
		userRest.setLastName("Ramos");
		userRest.setEmail("aramosromero@gmail.com");
		userRest.setId(id);
		return new ResponseEntity<UserRest>(userRest, HttpStatus.OK);
	}

	@GetMapping(path = "pag")
	public String getUsersPag(@RequestParam(value = "page", required = false) Integer page,
			@RequestParam(value = "limit", defaultValue = "50") Integer limit) {
		String msg = "getusersPag was called with ";
		if (page != null) {
			msg = msg + "pag : " + page + " and ";
		}
		msg = msg + "limit : " + limit;

		return msg;
	}

	@PostMapping(consumes = { MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE })
	public String createUsers(@RequestBody UserDetailsRequestModel userDetails) {
		return "createUser was called";
	}

	@PutMapping
	public String updateUser() {
		return "updateUser was called";
	}

	@DeleteMapping
	public String deleteUser() {
		return "deleteUser was called";
	}
}
